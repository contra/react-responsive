{"version":3,"sources":["../src/toQuery.js"],"names":["hyphenate","mq","negate","cond","keyVal","k","v","realKey","join","conds","obj","rules","all","forEach","push"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,sBAAtB;AACA,OAAOC,EAAP,MAAe,cAAf;;AAEA,IAAMC,SAAS,SAATA,MAAS;AAAA,kBAAeC,IAAf;AAAA,CAAf;;AAEA,SAASC,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACpB,MAAMC,UAAUP,UAAUK,CAAV,CAAhB;;AAEA;AACA,MAAI,OAAOC,CAAP,KAAa,QAAjB,EAA2B;AACzBA,QAAOA,CAAP;AACD;AACD,MAAIA,MAAM,IAAV,EAAgB;AACd,WAAOD,CAAP;AACD;AACD,MAAIC,MAAM,KAAV,EAAiB;AACf,WAAOJ,OAAOG,CAAP,CAAP;AACD;AACD,eAAWE,OAAX,UAAuBD,CAAvB;AACD;;AAED,SAASE,IAAT,CAAcC,KAAd,EAAqB;AACnB,SAAOA,MAAMD,IAAN,CAAW,OAAX,CAAP;AACD;;AAED,eAAe,UAAUE,GAAV,EAAe;AAC5B,MAAMC,QAAQ,EAAd;AACA,eAAYV,GAAGW,GAAf,EAAoBC,OAApB,CAA4B,UAAUR,CAAV,EAAa;AACvC,QAAMC,IAAII,IAAIL,CAAJ,CAAV;AACA,QAAIC,KAAK,IAAT,EAAe;AACbK,YAAMG,IAAN,CAAWV,OAAOC,CAAP,EAAUC,CAAV,CAAX;AACD;AACF,GALD;AAMA,SAAOE,KAAKG,KAAL,CAAP;AACD","file":"toQuery.js","sourcesContent":["import hyphenate from 'hyphenate-style-name'\nimport mq from './mediaQuery'\n\nconst negate = cond => `not ${cond}`\n\nfunction keyVal(k, v) {\n  const realKey = hyphenate(k)\n\n  // px shorthand\n  if (typeof v === 'number') {\n    v = `${v}px`\n  }\n  if (v === true) {\n    return k\n  }\n  if (v === false) {\n    return negate(k)\n  }\n  return `(${realKey}: ${v})`\n}\n\nfunction join(conds) {\n  return conds.join(' and ')\n}\n\nexport default function (obj) {\n  const rules = []\n  Object.keys(mq.all).forEach(function (k) {\n    const v = obj[k]\n    if (v != null) {\n      rules.push(keyVal(k, v))\n    }\n  })\n  return join(rules)\n}\n"]}